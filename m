Return-Path: <netdev+bounces-128055-lists+netdev=lfdr.de@vger.kernel.org>
X-Original-To: lists+netdev@lfdr.de
Delivered-To: lists+netdev@lfdr.de
Received: from ny.mirrors.kernel.org (ny.mirrors.kernel.org [147.75.199.223])
	by mail.lfdr.de (Postfix) with ESMTPS id 7E371977BB0
	for <lists+netdev@lfdr.de>; Fri, 13 Sep 2024 10:57:52 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ny.mirrors.kernel.org (Postfix) with ESMTPS id B7E951C20F78
	for <lists+netdev@lfdr.de>; Fri, 13 Sep 2024 08:57:51 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 45FAF1D67B4;
	Fri, 13 Sep 2024 08:57:47 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=fiberby.net header.i=@fiberby.net header.b="rA5SK0O1"
X-Original-To: netdev@vger.kernel.org
Received: from mail1.fiberby.net (mail1.fiberby.net [193.104.135.124])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 89D231D58B2;
	Fri, 13 Sep 2024 08:57:43 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=193.104.135.124
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1726217867; cv=none; b=YLBEeVZAm/kEFuauFY4sp8kZ2fmF1zGGtv4TCX1acOW8ddgHC4crDkVaaxGelTQNK/neGye8c0D0BcdzE8RjUucYCPi4DmhibGMny1+OhlnvmYMQbgiZytmzVE1nxMndPKtNK7QjgnXDVCusBk5xl7POea2jezCRQod903YQQ1E=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1726217867; c=relaxed/simple;
	bh=M5El9EyA9A0fefWeLaVcaVsb2FjaARGsqbpvDqpFzAo=;
	h=From:To:Cc:Subject:Date:Message-ID:MIME-Version:Content-Type; b=YmbgyIT2drdIJsJaqVYvFhl158sLJKN597UBvBaTAYs1V7PpiOdOVJ7Pav1S2YB0mKzna0OzM9zZfmwm3NQqAzdFLThsflFd0pAb5l4CYEV24hkKuwyp31l+04CW2onOSz5wmEepEG626eSOM/iSEdkVdEv/L0dywTJ4lwEkvZs=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=reject dis=none) header.from=fiberby.net; spf=pass smtp.mailfrom=fiberby.net; dkim=pass (2048-bit key) header.d=fiberby.net header.i=@fiberby.net header.b=rA5SK0O1; arc=none smtp.client-ip=193.104.135.124
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=reject dis=none) header.from=fiberby.net
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=fiberby.net
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=fiberby.net;
	s=202008; t=1726217861;
	bh=M5El9EyA9A0fefWeLaVcaVsb2FjaARGsqbpvDqpFzAo=;
	h=From:To:Cc:Subject:Date:From;
	b=rA5SK0O1sLh8ZhNZX1jQIbZmA2PToy6epTTsj8CW9l1r4pw1Nvbf6FkucOQ9zQa+z
	 N+N1Qfo2AK975ZnXLwxGLMgJ9RjDY3cp95T6FU5d6itglP7KT3xVu3XY1EwP29sX4H
	 xDJ9msjaZFzLSZBYclBGpsioX4FyLbAY7qw6oUEUwWB74YYXDQ97UqLNBKnfiESc9Y
	 wJjMyKnqIGct+rzwb0coEd22i9pZs9WAm8vHt3nZUD7qUfTrfckVULVtLUrQmk7JAy
	 ummm/9xyCTvaJuPkLNig0BFonZOsDLViWZJ6TGg5i0Vm1gnr/EoFy10orssbVHXPEm
	 oeNspWgu9kYUg==
Received: from x201s (193-104-135-243.ip4.fiberby.net [193.104.135.243])
	by mail1.fiberby.net (Postfix) with ESMTPSA id DA61E60078;
	Fri, 13 Sep 2024 08:57:40 +0000 (UTC)
Received: by x201s (Postfix, from userid 1000)
	id C08512018C7; Fri, 13 Sep 2024 08:56:11 +0000 (UTC)
From: =?UTF-8?q?Asbj=C3=B8rn=20Sloth=20T=C3=B8nnesen?= <ast@fiberby.net>
To: Eric Dumazet <edumazet@google.com>,
	Jakub Kicinski <kuba@kernel.org>,
	Paolo Abeni <pabeni@redhat.com>
Cc: =?UTF-8?q?Asbj=C3=B8rn=20Sloth=20T=C3=B8nnesen?= <ast@fiberby.net>,
	David Ahern <dsahern@kernel.org>,
	Matthieu Baerts <matttbe@kernel.org>,
	Mat Martineau <martineau@kernel.org>,
	Geliang Tang <geliang@kernel.org>,
	"David S. Miller" <davem@davemloft.net>,
	Donald Hunter <donald.hunter@gmail.com>,
	netdev@vger.kernel.org,
	mptcp@lists.linux.dev,
	linux-kernel@vger.kernel.org
Subject: [PATCH net-next] tools: ynl-gen: use big-endian netlink attribute types
Date: Fri, 13 Sep 2024 08:55:54 +0000
Message-ID: <20240913085555.134788-1-ast@fiberby.net>
X-Mailer: git-send-email 2.45.2
Precedence: bulk
X-Mailing-List: netdev@vger.kernel.org
List-Id: <netdev.vger.kernel.org>
List-Subscribe: <mailto:netdev+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:netdev+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Change ynl-gen-c.py to use NLA_BE16 and NLA_BE32 types to represent
big-endian u16 and u32 ynl types.

Doing this enables those attributes to have range checks applied, as
the validator will then convert to host endianness prior to validation.

The autogenerated kernel/uapi code have been regenerated by running:
  ./tools/net/ynl/ynl-regen.sh -f

This changes the policy types of the following attributes:

  FOU_ATTR_PORT (NLA_U16 -> NLA_BE16)
  FOU_ATTR_PEER_PORT (NLA_U16 -> NLA_BE16)
    These two are used with nla_get_be16/nla_put_be16().

  MPTCP_PM_ADDR_ATTR_ADDR4 (NLA_U32 -> NLA_BE32)
    This one is used with nla_get_in_addr/nla_put_in_addr(),
    which uses nla_get_be32/nla_put_be32().

IOWs the generated changes are AFAICT aligned with their implementations.

The generated userspace code remains identical, and have been verified
by comparing the output generated by the following command:
  make -C tools/net/ynl/generated

Signed-off-by: Asbjørn Sloth Tønnesen <ast@fiberby.net>
---
 net/ipv4/fou_nl.c          | 4 ++--
 net/mptcp/mptcp_pm_gen.c   | 2 +-
 tools/net/ynl/ynl-gen-c.py | 6 +++++-
 3 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/net/ipv4/fou_nl.c b/net/ipv4/fou_nl.c
index 98b90107b5abc..3d9614609b2d3 100644
--- a/net/ipv4/fou_nl.c
+++ b/net/ipv4/fou_nl.c
@@ -12,7 +12,7 @@
 
 /* Global operation policy for fou */
 const struct nla_policy fou_nl_policy[FOU_ATTR_IFINDEX + 1] = {
-	[FOU_ATTR_PORT] = { .type = NLA_U16, },
+	[FOU_ATTR_PORT] = { .type = NLA_BE16, },
 	[FOU_ATTR_AF] = { .type = NLA_U8, },
 	[FOU_ATTR_IPPROTO] = { .type = NLA_U8, },
 	[FOU_ATTR_TYPE] = { .type = NLA_U8, },
@@ -21,7 +21,7 @@ const struct nla_policy fou_nl_policy[FOU_ATTR_IFINDEX + 1] = {
 	[FOU_ATTR_LOCAL_V6] = { .len = 16, },
 	[FOU_ATTR_PEER_V4] = { .type = NLA_U32, },
 	[FOU_ATTR_PEER_V6] = { .len = 16, },
-	[FOU_ATTR_PEER_PORT] = { .type = NLA_U16, },
+	[FOU_ATTR_PEER_PORT] = { .type = NLA_BE16, },
 	[FOU_ATTR_IFINDEX] = { .type = NLA_S32, },
 };
 
diff --git a/net/mptcp/mptcp_pm_gen.c b/net/mptcp/mptcp_pm_gen.c
index c30a2a90a1925..5a6b2b4510d37 100644
--- a/net/mptcp/mptcp_pm_gen.c
+++ b/net/mptcp/mptcp_pm_gen.c
@@ -14,7 +14,7 @@
 const struct nla_policy mptcp_pm_address_nl_policy[MPTCP_PM_ADDR_ATTR_IF_IDX + 1] = {
 	[MPTCP_PM_ADDR_ATTR_FAMILY] = { .type = NLA_U16, },
 	[MPTCP_PM_ADDR_ATTR_ID] = { .type = NLA_U8, },
-	[MPTCP_PM_ADDR_ATTR_ADDR4] = { .type = NLA_U32, },
+	[MPTCP_PM_ADDR_ATTR_ADDR4] = { .type = NLA_BE32, },
 	[MPTCP_PM_ADDR_ATTR_ADDR6] = NLA_POLICY_EXACT_LEN(16),
 	[MPTCP_PM_ADDR_ATTR_PORT] = { .type = NLA_U16, },
 	[MPTCP_PM_ADDR_ATTR_FLAGS] = { .type = NLA_U32, },
diff --git a/tools/net/ynl/ynl-gen-c.py b/tools/net/ynl/ynl-gen-c.py
index 717530bc9c52e..e26f2c3c40891 100755
--- a/tools/net/ynl/ynl-gen-c.py
+++ b/tools/net/ynl/ynl-gen-c.py
@@ -48,6 +48,7 @@ class Type(SpecAttr):
         self.attr = attr
         self.attr_set = attr_set
         self.type = attr['type']
+        self.nla_type = self.type
         self.checks = attr.get('checks', {})
 
         self.request = False
@@ -157,7 +158,7 @@ class Type(SpecAttr):
         return '{ .type = ' + policy + ', }'
 
     def attr_policy(self, cw):
-        policy = c_upper('nla-' + self.attr['type'])
+        policy = c_upper('nla-' + self.nla_type)
 
         spec = self._attr_policy(policy)
         cw.p(f"\t[{self.enum_name}] = {spec},")
@@ -300,6 +301,9 @@ class TypeScalar(Type):
         self.byte_order_comment = ''
         if 'byte-order' in attr:
             self.byte_order_comment = f" /* {attr['byte-order']} */"
+            if self.attr['byte-order'] == 'big-endian':
+                if self.type in {'u16', 'u32'}:
+                    self.nla_type = f'be{self.type[1:]}'
 
         if 'enum' in self.attr:
             enum = self.family.consts[self.attr['enum']]
-- 
2.45.2


