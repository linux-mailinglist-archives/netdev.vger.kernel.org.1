Return-Path: <netdev+bounces-21059-lists+netdev=lfdr.de@vger.kernel.org>
X-Original-To: lists+netdev@lfdr.de
Delivered-To: lists+netdev@lfdr.de
Received: from ny.mirrors.kernel.org (ny.mirrors.kernel.org [147.75.199.223])
	by mail.lfdr.de (Postfix) with ESMTPS id AEE46762437
	for <lists+netdev@lfdr.de>; Tue, 25 Jul 2023 23:18:25 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ny.mirrors.kernel.org (Postfix) with ESMTPS id DB3301C20F64
	for <lists+netdev@lfdr.de>; Tue, 25 Jul 2023 21:18:24 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 8349226B79;
	Tue, 25 Jul 2023 21:18:22 +0000 (UTC)
X-Original-To: netdev@vger.kernel.org
Received: from lindbergh.monkeyblade.net (lindbergh.monkeyblade.net [23.128.96.19])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 77F6524198
	for <netdev@vger.kernel.org>; Tue, 25 Jul 2023 21:18:22 +0000 (UTC)
Received: from relay.hostedemail.com (smtprelay0017.hostedemail.com [216.40.44.17])
	by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 90DE4E42;
	Tue, 25 Jul 2023 14:18:20 -0700 (PDT)
Received: from omf17.hostedemail.com (a10.router.float.18 [10.200.18.1])
	by unirelay05.hostedemail.com (Postfix) with ESMTP id F1F8640FAF;
	Tue, 25 Jul 2023 21:18:18 +0000 (UTC)
Received: from [HIDDEN] (Authenticated sender: joe@perches.com) by omf17.hostedemail.com (Postfix) with ESMTPA id 899D617;
	Tue, 25 Jul 2023 21:18:16 +0000 (UTC)
Message-ID: <e032507fcb9e6c72d19520898c0095a4c0bd1c33.camel@perches.com>
Subject: Re: [PATCH] scripts: checkpatch: steer people away from using file
 paths
From: Joe Perches <joe@perches.com>
To: Jakub Kicinski <kuba@kernel.org>, krzk@kernel.org
Cc: geert@linux-m68k.org, netdev@vger.kernel.org, workflows@vger.kernel.org,
  mario.limonciello@amd.com
Date: Tue, 25 Jul 2023 14:18:15 -0700
In-Reply-To: <20230725155926.2775416-1-kuba@kernel.org>
References: <b6ab3c25-eab8-5573-f6e5-8415222439cd@kernel.org>
	 <20230725155926.2775416-1-kuba@kernel.org>
Content-Type: text/plain; charset="ISO-8859-1"
Content-Transfer-Encoding: quoted-printable
User-Agent: Evolution 3.48.4 (3.48.4-1.fc38) 
Precedence: bulk
X-Mailing-List: netdev@vger.kernel.org
List-Id: <netdev.vger.kernel.org>
List-Subscribe: <mailto:netdev+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:netdev+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-Stat-Signature: gzfawxpno8g1tido3ymgj9f4fmse561o
X-Rspamd-Server: rspamout04
X-Spam-Status: No, score=-0.9 required=5.0 tests=BAYES_00,FORGED_SPF_HELO,
	RCVD_IN_DNSWL_NONE,RCVD_IN_MSPIKE_H3,RCVD_IN_MSPIKE_WL,SPF_HELO_PASS,
	SPF_NONE,T_SCC_BODY_TEXT_LINE,UNPARSEABLE_RELAY autolearn=no
	autolearn_force=no version=3.4.6
X-Rspamd-Queue-Id: 899D617
X-Session-Marker: 6A6F6540706572636865732E636F6D
X-Session-ID: U2FsdGVkX19+gnyP27RIeixagOLJtFpzlaFEYGgPOs0=
X-HE-Tag: 1690319896-424278
X-HE-Meta: U2FsdGVkX1/LZNSbfIXGQyGI2AhKaY5A1Mx9c52Aa6PDMKrcIhn8cn2Ug5Lnkhgr/O+10CYCGH1zUK5RUxhGINWFGYfg8mkDw4qGEtzI0IPQZFzcfFI6FfQn7BEQ+UsXocPDIPaUU95RZQuRyDGLPJ/Cjtjri3rZ3gFPRL+AXkV45dfbDJrz3VG6hGj43jYIYzwMz+r9dQ863fwiThq6M0RADGxthFS7uFw7gCXNXiRYcwLkYBVFaWSaWX2ExuiGxF1ZHCQypkiiKjX/R+uT87mh24/fWT5TLNjHLyXBBfDahk4dW7y8jt/s9s/m5Q8Y
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
	lindbergh.monkeyblade.net

On Tue, 2023-07-25 at 08:59 -0700, Jakub Kicinski wrote:
> We repeatedly see noobs misuse get_maintainer by running it on
> the file paths rather than the patchfile. This leads to authors
> of changes (quoted commits and commits under Fixes) not getting
> CCed. These are usually the best reviewers!
>=20
> The file option should really not be used by noobs, unless
> they are just trying to find a maintainer to manually contact.

noobs is not an appropriate use IMO for a commit message.

> This is what I had in mind.

<shrug>  I think it's unnecessary and this content should be
better described in some process doc.

> diff --git a/scripts/get_maintainer.pl b/scripts/get_maintainer.pl
[]
> @@ -544,7 +546,13 @@ foreach my $file (@ARGV) {
>      if ($from_filename && (vcs_exists() && !vcs_file_exists($file))) {
>  	warn "$P: file '$file' not found in version control $!\n";
>      }
> -    if ($from_filename || ($file ne "&STDIN" && vcs_file_exists($file)))=
 {
> +    if ($from_filename) {
> +	if (!$silence_file_warning) {
> +	    warn "$P: WARNING: Prefer running the script on patches as "
> +	        . "generated by git format-patch. Selecting paths is known "
> +		. "to miss recipients!\n";

Don't separate a single output message into multiple lines.
Coalesce the string elements.

Also, this should show some reason why this isn't appropriate
as a patch to a single file would not have this issue.

e.g.:	When a patch series touches multiple files, showing all maintainers i=
s useful. see:  <some process doc>

> @@ -1089,6 +1098,10 @@ version: $V
>     --pattern-depth=3D0 --remove-duplicates --rolestats]
> =20
>  Notes:
> +  Using "-f file" is generally discouraged, running the script on a file=
patch
> +      (as generated by git format-patch) is usually the right thing to d=
o.
> +      Commit message is an integral part of the change and $P
> +      will extract additional information from it (keywords, Fixes tags =
etc.)

-f <file>

"filepatch" doesn't appear in the kernel at all. Use "patch file".

grammar: The commit message is...

may instead of will


